{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Title</th>\n",
       "      <th>Company</th>\n",
       "      <th>Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>Area</th>\n",
       "      <th>Classification</th>\n",
       "      <th>SubClassification</th>\n",
       "      <th>Requirement</th>\n",
       "      <th>FullDescription</th>\n",
       "      <th>LowestSalary</th>\n",
       "      <th>HighestSalary</th>\n",
       "      <th>JobType</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>37404348.0</td>\n",
       "      <td>Casual Stock Replenisher</td>\n",
       "      <td>Aldi Stores</td>\n",
       "      <td>2018-10-07T00:00:00.000Z</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>North West &amp; Hills District</td>\n",
       "      <td>Retail &amp; Consumer Products</td>\n",
       "      <td>Retail Assistants</td>\n",
       "      <td>Our Casual Stock Replenishers pride themselves...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>37404337.0</td>\n",
       "      <td>Casual Stock Replenisher</td>\n",
       "      <td>Aldi Stores</td>\n",
       "      <td>2018-10-07T00:00:00.000Z</td>\n",
       "      <td>Richmond &amp; Hawkesbury</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Retail &amp; Consumer Products</td>\n",
       "      <td>Retail Assistants</td>\n",
       "      <td>Our Casual Stock Replenishers pride themselves...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37404356.0</td>\n",
       "      <td>RETAIL SALES SUPERSTARS and STYLISTS Wanted - ...</td>\n",
       "      <td>LB Creative Pty Ltd</td>\n",
       "      <td>2018-10-07T00:00:00.000Z</td>\n",
       "      <td>Brisbane</td>\n",
       "      <td>CBD &amp; Inner Suburbs</td>\n",
       "      <td>Retail &amp; Consumer Products</td>\n",
       "      <td>Retail Assistants</td>\n",
       "      <td>BRAND NEW FLAGSHIP STORE OPENING - SUNSHINE PLAZA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>37404330.0</td>\n",
       "      <td>Team member - Belrose</td>\n",
       "      <td>Anaconda Group Pty Ltd</td>\n",
       "      <td>2018-10-07T00:00:00.000Z</td>\n",
       "      <td>Gosford &amp; Central Coast</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Retail &amp; Consumer Products</td>\n",
       "      <td>Retail Assistants</td>\n",
       "      <td>Bring it on - do you love the great outdoors a...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37404308.0</td>\n",
       "      <td>Business Banking Contact Centre Specialist, Ni...</td>\n",
       "      <td>Commonwealth Bank - Business &amp; Private Banking</td>\n",
       "      <td>2018-10-07T00:00:00.000Z</td>\n",
       "      <td>Sydney</td>\n",
       "      <td>Ryde &amp; Macquarie Park</td>\n",
       "      <td>Call Centre &amp; Customer Service</td>\n",
       "      <td>Sales - Inbound</td>\n",
       "      <td>We are seeking highly articulate, enthusiastic...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40784</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40785</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40786</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40787</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40788</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>40789 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Id                                              Title  \\\n",
       "0      37404348.0                           Casual Stock Replenisher   \n",
       "1      37404337.0                           Casual Stock Replenisher   \n",
       "2      37404356.0  RETAIL SALES SUPERSTARS and STYLISTS Wanted - ...   \n",
       "3      37404330.0                              Team member - Belrose   \n",
       "4      37404308.0  Business Banking Contact Centre Specialist, Ni...   \n",
       "...           ...                                                ...   \n",
       "40784         NaN                                                NaN   \n",
       "40785         NaN                                                NaN   \n",
       "40786         NaN                                                NaN   \n",
       "40787         NaN                                                NaN   \n",
       "40788         NaN                                                NaN   \n",
       "\n",
       "                                              Company  \\\n",
       "0                                         Aldi Stores   \n",
       "1                                         Aldi Stores   \n",
       "2                                 LB Creative Pty Ltd   \n",
       "3                              Anaconda Group Pty Ltd   \n",
       "4      Commonwealth Bank - Business & Private Banking   \n",
       "...                                               ...   \n",
       "40784                                             NaN   \n",
       "40785                                             NaN   \n",
       "40786                                             NaN   \n",
       "40787                                             NaN   \n",
       "40788                                             NaN   \n",
       "\n",
       "                           Date                 Location  \\\n",
       "0      2018-10-07T00:00:00.000Z                   Sydney   \n",
       "1      2018-10-07T00:00:00.000Z    Richmond & Hawkesbury   \n",
       "2      2018-10-07T00:00:00.000Z                 Brisbane   \n",
       "3      2018-10-07T00:00:00.000Z  Gosford & Central Coast   \n",
       "4      2018-10-07T00:00:00.000Z                   Sydney   \n",
       "...                         ...                      ...   \n",
       "40784                       NaN                      NaN   \n",
       "40785                       NaN                      NaN   \n",
       "40786                       NaN                      NaN   \n",
       "40787                       NaN                      NaN   \n",
       "40788                       NaN                      NaN   \n",
       "\n",
       "                              Area                  Classification  \\\n",
       "0      North West & Hills District      Retail & Consumer Products   \n",
       "1                              NaN      Retail & Consumer Products   \n",
       "2              CBD & Inner Suburbs      Retail & Consumer Products   \n",
       "3                              NaN      Retail & Consumer Products   \n",
       "4            Ryde & Macquarie Park  Call Centre & Customer Service   \n",
       "...                            ...                             ...   \n",
       "40784                          NaN                             NaN   \n",
       "40785                          NaN                             NaN   \n",
       "40786                          NaN                             NaN   \n",
       "40787                          NaN                             NaN   \n",
       "40788                          NaN                             NaN   \n",
       "\n",
       "       SubClassification                                        Requirement  \\\n",
       "0      Retail Assistants  Our Casual Stock Replenishers pride themselves...   \n",
       "1      Retail Assistants  Our Casual Stock Replenishers pride themselves...   \n",
       "2      Retail Assistants  BRAND NEW FLAGSHIP STORE OPENING - SUNSHINE PLAZA   \n",
       "3      Retail Assistants  Bring it on - do you love the great outdoors a...   \n",
       "4        Sales - Inbound  We are seeking highly articulate, enthusiastic...   \n",
       "...                  ...                                                ...   \n",
       "40784                NaN                                                NaN   \n",
       "40785                NaN                                                NaN   \n",
       "40786                NaN                                                NaN   \n",
       "40787                NaN                                                NaN   \n",
       "40788                NaN                                                NaN   \n",
       "\n",
       "      FullDescription  LowestSalary  HighestSalary JobType  \n",
       "0                 NaN           0.0           30.0     NaN  \n",
       "1                 NaN           0.0           30.0     NaN  \n",
       "2                 NaN           0.0           30.0     NaN  \n",
       "3                 NaN           0.0           30.0     NaN  \n",
       "4                 NaN           0.0           30.0     NaN  \n",
       "...               ...           ...            ...     ...  \n",
       "40784             NaN           NaN            NaN     NaN  \n",
       "40785             NaN           NaN            NaN     NaN  \n",
       "40786             NaN           NaN            NaN     NaN  \n",
       "40787             NaN           NaN            NaN     NaN  \n",
       "40788             NaN           NaN            NaN     NaN  \n",
       "\n",
       "[40789 rows x 13 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "#Load job market\n",
    "df = pd.read_csv('job-market(3).csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LowestSalary</th>\n",
       "      <th>HighestSalary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40784</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40785</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40786</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40787</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40788</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>40789 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       LowestSalary  HighestSalary\n",
       "0               0.0           30.0\n",
       "1               0.0           30.0\n",
       "2               0.0           30.0\n",
       "3               0.0           30.0\n",
       "4               0.0           30.0\n",
       "...             ...            ...\n",
       "40784           NaN            NaN\n",
       "40785           NaN            NaN\n",
       "40786           NaN            NaN\n",
       "40787           NaN            NaN\n",
       "40788           NaN            NaN\n",
       "\n",
       "[40789 rows x 2 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib\n",
    "#create dataframe for salary ranges\n",
    "salary_ranges = df[['LowestSalary','HighestSalary']].copy()\n",
    "\n",
    "salary_ranges\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Title</th>\n",
       "      <th>Company</th>\n",
       "      <th>Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>Area</th>\n",
       "      <th>Classification</th>\n",
       "      <th>SubClassification</th>\n",
       "      <th>Requirement</th>\n",
       "      <th>FullDescription</th>\n",
       "      <th>HighestSalary</th>\n",
       "      <th>JobType</th>\n",
       "      <th>LowestSalary</th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LowestSalary</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.0</th>\n",
       "      <td>3894</td>\n",
       "      <td>3894</td>\n",
       "      <td>3571</td>\n",
       "      <td>3894</td>\n",
       "      <td>3894</td>\n",
       "      <td>2560</td>\n",
       "      <td>3894</td>\n",
       "      <td>3894</td>\n",
       "      <td>3894</td>\n",
       "      <td>3737</td>\n",
       "      <td>3894</td>\n",
       "      <td>3740</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30.0</th>\n",
       "      <td>1842</td>\n",
       "      <td>1842</td>\n",
       "      <td>1779</td>\n",
       "      <td>1842</td>\n",
       "      <td>1842</td>\n",
       "      <td>1082</td>\n",
       "      <td>1842</td>\n",
       "      <td>1842</td>\n",
       "      <td>1842</td>\n",
       "      <td>1815</td>\n",
       "      <td>1842</td>\n",
       "      <td>1816</td>\n",
       "      <td>30.0</td>\n",
       "      <td>1842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40.0</th>\n",
       "      <td>2519</td>\n",
       "      <td>2519</td>\n",
       "      <td>2373</td>\n",
       "      <td>2519</td>\n",
       "      <td>2519</td>\n",
       "      <td>1516</td>\n",
       "      <td>2519</td>\n",
       "      <td>2519</td>\n",
       "      <td>2519</td>\n",
       "      <td>2474</td>\n",
       "      <td>2519</td>\n",
       "      <td>2475</td>\n",
       "      <td>40.0</td>\n",
       "      <td>2519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50.0</th>\n",
       "      <td>1844</td>\n",
       "      <td>1844</td>\n",
       "      <td>1760</td>\n",
       "      <td>1844</td>\n",
       "      <td>1844</td>\n",
       "      <td>1234</td>\n",
       "      <td>1844</td>\n",
       "      <td>1844</td>\n",
       "      <td>1844</td>\n",
       "      <td>1817</td>\n",
       "      <td>1844</td>\n",
       "      <td>1821</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1844</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Id  Title  Company  Date  Location  Area  Classification  \\\n",
       "LowestSalary                                                               \n",
       "0.0           3894   3894     3571  3894      3894  2560            3894   \n",
       "30.0          1842   1842     1779  1842      1842  1082            1842   \n",
       "40.0          2519   2519     2373  2519      2519  1516            2519   \n",
       "50.0          1844   1844     1760  1844      1844  1234            1844   \n",
       "\n",
       "              SubClassification  Requirement  FullDescription  HighestSalary  \\\n",
       "LowestSalary                                                                   \n",
       "0.0                        3894         3894             3737           3894   \n",
       "30.0                       1842         1842             1815           1842   \n",
       "40.0                       2519         2519             2474           2519   \n",
       "50.0                       1844         1844             1817           1844   \n",
       "\n",
       "              JobType  LowestSalary  Count  \n",
       "LowestSalary                                \n",
       "0.0              3740           0.0   3894  \n",
       "30.0             1816          30.0   1842  \n",
       "40.0             2475          40.0   2519  \n",
       "50.0             1821          50.0   1844  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Min_salary = df[df['LowestSalary'].isna()==False]\n",
    "Min_salary= Min_salary.groupby('LowestSalary').count()\n",
    "Min_salary['LowestSalary'] = Min_salary.index\n",
    "Min_salary['Count'] = Min_salary[\"Id\"]\n",
    "Min_salary.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Title</th>\n",
       "      <th>Company</th>\n",
       "      <th>Date</th>\n",
       "      <th>Area</th>\n",
       "      <th>Classification</th>\n",
       "      <th>SubClassification</th>\n",
       "      <th>Requirement</th>\n",
       "      <th>FullDescription</th>\n",
       "      <th>LowestSalary</th>\n",
       "      <th>HighestSalary</th>\n",
       "      <th>JobType</th>\n",
       "      <th>Location</th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Location</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>ACT</td>\n",
       "      <td>238</td>\n",
       "      <td>238</td>\n",
       "      <td>235</td>\n",
       "      <td>238</td>\n",
       "      <td>0</td>\n",
       "      <td>238</td>\n",
       "      <td>238</td>\n",
       "      <td>238</td>\n",
       "      <td>235</td>\n",
       "      <td>238</td>\n",
       "      <td>238</td>\n",
       "      <td>236</td>\n",
       "      <td>ACT</td>\n",
       "      <td>238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Adelaide</td>\n",
       "      <td>390</td>\n",
       "      <td>390</td>\n",
       "      <td>356</td>\n",
       "      <td>390</td>\n",
       "      <td>0</td>\n",
       "      <td>390</td>\n",
       "      <td>390</td>\n",
       "      <td>390</td>\n",
       "      <td>374</td>\n",
       "      <td>390</td>\n",
       "      <td>390</td>\n",
       "      <td>374</td>\n",
       "      <td>Adelaide</td>\n",
       "      <td>390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Adelaide Hills &amp; Barossa</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>Adelaide Hills &amp; Barossa</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Albany &amp; Great Southern</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>Albany &amp; Great Southern</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Albury Area</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>Albury Area</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Id  Title  Company  Date  Area  Classification  \\\n",
       "Location                                                                    \n",
       "ACT                       238    238      235   238     0             238   \n",
       "Adelaide                  390    390      356   390     0             390   \n",
       "Adelaide Hills & Barossa   19     19       18    19     0              19   \n",
       "Albany & Great Southern    10     10       10    10     0              10   \n",
       "Albury Area                19     19       18    19     0              19   \n",
       "\n",
       "                          SubClassification  Requirement  FullDescription  \\\n",
       "Location                                                                    \n",
       "ACT                                     238          238              235   \n",
       "Adelaide                                390          390              374   \n",
       "Adelaide Hills & Barossa                 19           19               19   \n",
       "Albany & Great Southern                  10           10               10   \n",
       "Albury Area                              19           19               19   \n",
       "\n",
       "                          LowestSalary  HighestSalary  JobType  \\\n",
       "Location                                                         \n",
       "ACT                                238            238      236   \n",
       "Adelaide                           390            390      374   \n",
       "Adelaide Hills & Barossa            19             19       19   \n",
       "Albany & Great Southern             10             10       10   \n",
       "Albury Area                         19             19       19   \n",
       "\n",
       "                                          Location  Count  \n",
       "Location                                                   \n",
       "ACT                                            ACT    238  \n",
       "Adelaide                                  Adelaide    390  \n",
       "Adelaide Hills & Barossa  Adelaide Hills & Barossa     19  \n",
       "Albany & Great Southern    Albany & Great Southern     10  \n",
       "Albury Area                            Albury Area     19  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#OPTIONAL\n",
    "\n",
    "locationDf = df[df['Location'].isna()==False]\n",
    "locationDf = locationDf.groupby('Location').count()\n",
    "locationDf['Location'] = locationDf.index\n",
    "locationDf['Count'] = locationDf[\"Id\"]\n",
    "locationDf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(50.0, 0.5, '')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#OPTIONAL\n",
    "\n",
    "%matplotlib inline\n",
    "# Pie char for job market share of cities\n",
    "from matplotlib import cm\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
